definitions:
  gin.H:
    additionalProperties: {}
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handlers.AdminTokenRequest:
    properties:
      admin_token:
        type: string
    type: object
  handlers.ForgotPasswordRequest:
    properties:
      email:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      identifier:
        type: string
      password:
        type: string
    type: object
  handlers.SignupRequest:
    properties:
      admin_token:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.Address:
    description: Address represents an address in the system
    properties:
      city_name:
        type: string
      country_name:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      district_name:
        type: string
      hospital_name:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Donor:
    description: Donor represents a donor in the system
    properties:
      address:
        allOf:
        - $ref: '#/definitions/models.Address'
        description: form*
      birth_date:
        type: string
      bloodType:
        description: form
        type: string
      car_available:
        description: form
        type: boolean
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      last_name:
        type: string
      latinName:
        description: form
        type: string
      mother_language:
        type: string
      paid:
        type: boolean
      phone_number:
        description: form
        type: string
      platelet_timer:
        type: string
      red_timer:
        type: string
      score:
        type: integer
      updatedAt:
        type: string
      verify:
        type: string
    type: object
  models.Patient:
    description: Patient represents a patient in the system
    properties:
      accepts_red_crescent:
        description: form
        type: boolean
      address:
        allOf:
        - $ref: '#/definitions/models.Address'
        description: form*
      birth_date:
        type: string
      bloodType:
        description: form
        type: string
      car_available:
        description: form
        type: boolean
      createdAt:
        type: string
      death_date:
        type: string
      death_status:
        type: boolean
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      id:
        type: integer
      lastName:
        type: string
      latinName:
        description: form
        type: string
      phone_number:
        description: form
        type: string
      platelet-recieved:
        type: integer
      platelet_required:
        description: form
        type: integer
      red_crescent_code:
        description: form
        type: string
      red_recieved:
        type: integer
      red_required:
        description: form
        type: integer
      relationship:
        description: form
        type: string
      requests_sent:
        type: integer
      special_patient:
        type: boolean
      updatedAt:
        type: string
      urgency:
        type: integer
      verify:
        type: string
    type: object
  models.SchedualedRequest:
    description: SchedualedRequest represents a schedualed request in the system
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      disease_name:
        type: string
      id:
        type: integer
      next_request_date:
        type: string
      patient:
        $ref: '#/definitions/models.Patient'
      patient_id:
        type: integer
      request_frequency:
        type: integer
      request_interval:
        type: integer
      requests_done:
        type: integer
      updatedAt:
        type: string
    type: object
  models.User:
    description: User represents a user in the system
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      last_activity:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /check-login:
    post:
      consumes:
      - application/json
      description: Check login
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
      summary: Check login
      tags:
      - auth
  /donate-platelet:
    post:
      consumes:
      - application/json
      description: Donate blood to a patient
      operationId: donate-platelet
      parameters:
      - description: Patient ID
        in: query
        name: patient_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
      summary: Donate blood to a patient
      tags:
      - donate
  /donate-red:
    post:
      consumes:
      - application/json
      description: Donate Red Blood to a patient
      operationId: donate-red
      parameters:
      - description: Patient ID
        in: query
        name: patient_id
        required: true
        type: integer
      - description: Donor ID
        in: query
        name: donor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
      summary: Donate Red Blood to a patient
      tags:
      - donate
  /donor:
    post:
      consumes:
      - application/json
      description: Create a donor
      operationId: create-donor
      parameters:
      - description: Donor input
        in: body
        name: donor
        required: true
        schema:
          $ref: '#/definitions/models.Donor'
      produces:
      - application/json
      responses: {}
      summary: Create a donor
      tags:
      - donors
  /donor/{id}:
    delete:
      description: Delete a donor
      operationId: delete-donor
      parameters:
      - description: Donor ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      summary: Delete a donor
      tags:
      - donors
    get:
      description: Get a donor by ID
      operationId: get-donor-by-id
      parameters:
      - description: Donor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get a donor by ID
      tags:
      - donors
    put:
      consumes:
      - application/json
      description: Update a donor
      operationId: update-donor
      parameters:
      - description: Donor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Donor input
        in: body
        name: donor
        required: true
        schema:
          $ref: '#/definitions/models.Donor'
      produces:
      - application/json
      responses: {}
      summary: Update a donor
      tags:
      - donors
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Send reset password link
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent successfully
          schema:
            type: string
      summary: Forgot Password
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            type: string
      summary: Logout
      tags:
      - auth
  /patient:
    post:
      consumes:
      - application/json
      description: Create a patient
      operationId: create-patient
      parameters:
      - description: Patient object
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/models.Patient'
      produces:
      - application/json
      responses: {}
      summary: Create a patient
      tags:
      - patients
  /patient/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a patient
      operationId: delete-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a patient
      tags:
      - patients
    get:
      consumes:
      - application/json
      description: Get a patient by ID
      operationId: get-patient-by-id
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a patient by ID
      tags:
      - patients
    put:
      consumes:
      - application/json
      description: Update a patient
      operationId: update-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: string
      - description: Patient object
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/models.Patient'
      produces:
      - application/json
      responses: {}
      summary: Update a patient
      tags:
      - patients
  /scheduale-request:
    post:
      consumes:
      - application/json
      description: Create a schedualed request
      parameters:
      - description: SchedualedRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SchedualedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Schedualed request created
          schema:
            type: string
      summary: Create a schedualed request
      tags:
      - request
  /schedualed-request/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a schedualed request
      parameters:
      - description: ID of the request
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Request deleted
          schema:
            type: string
      summary: Delete a schedualed request
      tags:
      - request
  /schedualed-requests:
    get:
      consumes:
      - application/json
      description: Get all schedualed requests
      produces:
      - application/json
      responses:
        "200":
          description: List of schedualed requests
          schema:
            items:
              $ref: '#/definitions/models.SchedualedRequest'
            type: array
      summary: Get all schedualed requests
      tags:
      - request
  /signup:
    post:
      consumes:
      - application/json
      description: Signup
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
      summary: Signup
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get users
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AdminTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get users
      tags:
      - auth
  /waiting-patients:
    get:
      consumes:
      - application/json
      description: Check patients waiting for donation
      operationId: check-patients-waiting
      produces:
      - application/json
      responses: {}
      summary: Check patients waiting for donation
      tags:
      - patients
swagger: "2.0"
